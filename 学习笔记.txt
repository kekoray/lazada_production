1.统计学的各种分布,如正态分布等..
2.如找不到某个api的方法,要手动导包即可;
3.spark3.0后,ml包多了很多功能,需掌握df的相关系数构建即可
4.binarizer只能划分2种类别,少用;
5.多用bucketizer,可以指定条件划分多种类别的数据
6. 案例中有提到RDD/DF方式去选某一列做特征统计的方法;
RDD=>DF的方法:
	1.样例类+map写入+toDF
	2.row+map写入+schema++createDF
	3.

7.步骤
① 带标签的训练set  ->  数据查看  -> 训练集/测试集划分 -> 特征工程 ->  超参数选取 -> fit -> model -> transform -> 模型校验
② 无标签的测试set  -> transform -> 获取预测值


8.网格搜素与交叉验证
是在训练模型fit之前找到最合适的超参数的操作,所以是拿Et.学习器进行搜素;
如何选择超参数的给定值?  一半都是在默认值的左右两侧选定;
设置超参数的方法有2种

======================================================

决策树算法:

含义:  构建决策树就是根据特征将样本划分到不同叶子节点上的过程
构建决策树三要素:
	1.特征选择: 规则方式选择, 选择信息熵小的,选择信息增益大的,选择gini系数大的
	2.决策树生成: ID3, C4.5, CART树
	3.决策树剪枝:  先剪枝,后剪枝
	
	
基于规则的建树: 按照特征出现的顺序建立决策

基于模型的建树:

**** 可结合电商案例分析ID3算法  ***
总体信息熵 ==> 标签列的分支概率总和


***  有个案例可做, 用RDD方式/DF方式做




剪枝:
	what: 剪枝就是使用叶子节点或分支代替子树;
	why: 避免决策树模型过拟合;
	how: 先剪枝6种(工作中用到) / 后剪枝

 




图例:
			分支节点
			  /    \
			 /		\
		叶子节点1	叶子节点2
		






==========================================
知识点:
1.对数函数满足可加性
2.练习递归程序--汉诺塔问题,阶层问题,二叉树的递归创建
3.剪枝算法









             

